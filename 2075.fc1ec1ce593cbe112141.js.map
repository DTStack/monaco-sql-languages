{"version":3,"file":"2075.fc1ec1ce593cbe112141.js","mappings":"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","sources":["webpack://monaco-sql-languages/./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\r\n    comments: {\r\n        blockComment: ['/*', '*/']\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}', notIn: ['string', 'comment'] },\r\n        { open: '[', close: ']', notIn: ['string', 'comment'] },\r\n        { open: '(', close: ')', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] },\r\n        { open: \"'\", close: \"'\", notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/'),\r\n            end: new RegExp('^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.css',\r\n    ws: '[ \\t\\n\\r\\f]*',\r\n    identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\r\n    brackets: [\r\n        { open: '{', close: '}', token: 'delimiter.bracket' },\r\n        { open: '[', close: ']', token: 'delimiter.bracket' },\r\n        { open: '(', close: ')', token: 'delimiter.parenthesis' },\r\n        { open: '<', close: '>', token: 'delimiter.angle' }\r\n    ],\r\n    tokenizer: {\r\n        root: [{ include: '@selector' }],\r\n        selector: [\r\n            { include: '@comments' },\r\n            { include: '@import' },\r\n            { include: '@strings' },\r\n            [\r\n                '[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)',\r\n                { token: 'keyword', next: '@keyframedeclaration' }\r\n            ],\r\n            ['[@](page|content|font-face|-moz-document)', { token: 'keyword' }],\r\n            ['[@](charset|namespace)', { token: 'keyword', next: '@declarationbody' }],\r\n            [\r\n                '(url-prefix)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            [\r\n                '(url)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            { include: '@selectorname' },\r\n            ['[\\\\*]', 'tag'],\r\n            ['[>\\\\+,]', 'delimiter'],\r\n            ['\\\\[', { token: 'delimiter.bracket', next: '@selectorattribute' }],\r\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }]\r\n        ],\r\n        selectorbody: [\r\n            { include: '@comments' },\r\n            ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', 'attribute.name', '@rulevalue'],\r\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        selectorname: [\r\n            ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', 'tag'] // selector (.foo, div, ...)\r\n        ],\r\n        selectorattribute: [\r\n            { include: '@term' },\r\n            [']', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        term: [\r\n            { include: '@comments' },\r\n            [\r\n                '(url-prefix)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            [\r\n                '(url)(\\\\()',\r\n                ['attribute.value', { token: 'delimiter.parenthesis', next: '@urldeclaration' }]\r\n            ],\r\n            { include: '@functioninvocation' },\r\n            { include: '@numbers' },\r\n            { include: '@name' },\r\n            ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'delimiter'],\r\n            [',', 'delimiter']\r\n        ],\r\n        rulevalue: [\r\n            { include: '@comments' },\r\n            { include: '@strings' },\r\n            { include: '@term' },\r\n            ['!important', 'keyword'],\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        warndebug: [['[@](warn|debug)', { token: 'keyword', next: '@declarationbody' }]],\r\n        import: [['[@](import)', { token: 'keyword', next: '@declarationbody' }]],\r\n        urldeclaration: [\r\n            { include: '@strings' },\r\n            ['[^)\\r\\n]+', 'string'],\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        parenthizedterm: [\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'delimiter.parenthesis', next: '@pop' }]\r\n        ],\r\n        declarationbody: [\r\n            { include: '@term' },\r\n            [';', 'delimiter', '@pop'],\r\n            ['(?=})', { token: '', next: '@pop' }] // missing semicolon\r\n        ],\r\n        comments: [\r\n            ['\\\\/\\\\*', 'comment', '@comment'],\r\n            ['\\\\/\\\\/+.*', 'comment']\r\n        ],\r\n        comment: [\r\n            ['\\\\*\\\\/', 'comment', '@pop'],\r\n            [/[^*/]+/, 'comment'],\r\n            [/./, 'comment']\r\n        ],\r\n        name: [['@identifier', 'attribute.value']],\r\n        numbers: [\r\n            [\r\n                '-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?',\r\n                { token: 'attribute.value.number', next: '@units' }\r\n            ],\r\n            ['#[0-9a-fA-F_]+(?!\\\\w)', 'attribute.value.hex']\r\n        ],\r\n        units: [\r\n            [\r\n                '(em|ex|ch|rem|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?',\r\n                'attribute.value.unit',\r\n                '@pop'\r\n            ]\r\n        ],\r\n        keyframedeclaration: [\r\n            ['@identifier', 'attribute.value'],\r\n            ['{', { token: 'delimiter.bracket', switchTo: '@keyframebody' }]\r\n        ],\r\n        keyframebody: [\r\n            { include: '@term' },\r\n            ['{', { token: 'delimiter.bracket', next: '@selectorbody' }],\r\n            ['}', { token: 'delimiter.bracket', next: '@pop' }]\r\n        ],\r\n        functioninvocation: [\r\n            ['@identifier\\\\(', { token: 'attribute.value', next: '@functionarguments' }]\r\n        ],\r\n        functionarguments: [\r\n            ['\\\\$@identifier@ws:', 'attribute.name'],\r\n            ['[,]', 'delimiter'],\r\n            { include: '@term' },\r\n            ['\\\\)', { token: 'attribute.value', next: '@pop' }]\r\n        ],\r\n        strings: [\r\n            ['~?\"', { token: 'string', next: '@stringenddoublequote' }],\r\n            [\"~?'\", { token: 'string', next: '@stringendquote' }]\r\n        ],\r\n        stringenddoublequote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            ['\"', { token: 'string', next: '@pop' }],\r\n            [/[^\\\\\"]+/, 'string'],\r\n            ['.', 'string']\r\n        ],\r\n        stringendquote: [\r\n            ['\\\\\\\\.', 'string'],\r\n            [\"'\", { token: 'string', next: '@pop' }],\r\n            [/[^\\\\']+/, 'string'],\r\n            ['.', 'string']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","wordPattern","comments","blockComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","markers","start","RegExp","end","language","defaultToken","tokenPostfix","ws","identifier","token","tokenizer","root","include","selector","next","selectorbody","selectorname","selectorattribute","term","rulevalue","warndebug","import","urldeclaration","parenthizedterm","declarationbody","comment","name","numbers","units","keyframedeclaration","switchTo","keyframebody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote"],"sourceRoot":""}
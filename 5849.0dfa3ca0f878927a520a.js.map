{"version":3,"file":"5849.0dfa3ca0f878927a520a.js","mappings":"uKAIO,IAAIA,EAAO,CACdC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,MAExBC,iBAAkB,CACd,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,aAAc,cACdC,SAAU,cACVC,UAAW,CACPC,KAAM,CACF,CAAEC,QAAS,eACX,CAAEA,QAAS,YACX,CAAC,iBAAkB,CAAC,UAAW,KAC/B,CAAC,oBAAqB,CAAC,UAAW,GAAI,CAAEC,MAAO,WAAYC,KAAM,gBACjE,CACI,sHACA,CAAED,MAAO,UAAWC,KAAM,gBAGlCC,UAAW,CACP,CAAEH,QAAS,eACX,CAAEA,QAAS,YACX,CACI,cACA,CACII,MAAO,CACH,OAAQ,CAAEH,MAAO,WAAYC,KAAM,WACnC,WAAY,cAIxB,CACI,KACA,CACIE,MAAO,CACH,OAAQ,GACR,WAAY,MAIxB,CACI,IACA,CACIA,MAAO,CACH,OAAQ,CAAEH,MAAO,GAAIC,KAAM,WAC3B,WAAY,OAM5BG,WAAY,CACR,CACI,MACA,CACID,MAAO,CACH,OAAQ,CAAEH,MAAO,GAAIC,KAAM,WAC3B,WAAY,OAK5BI,QAAS,CAAC,CAAC,UAAW,UAAW,YAEjCC,QAAS,CACL,CAAC,OAAQ,GAAI,WACb,CAAC,MAAO,IACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,eAChB,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,mBAEpBC,WAAY,CACR,CACI,WACA,CACIJ,MAAO,CACH,OAAQ,CAAEH,MAAO,SAAUC,KAAM,WACjC,WAAY,YAIxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU,YAEpBO,cAAe,CACX,CACI,WACA,CACIL,MAAO,CACH,OAAQ,CAAEH,MAAO,SAAUC,KAAM,WACjC,WAAY,YAIxB,CAAC,MAAO,iBACR,CAAC,KAAM,SAAU,WACjB,CAAC,IAAK,SAAU,QAChB,CAAC,cAAe,YAChB,CAAC,MAAO,UACR,CAAC,IAAK,SAAU","sources":["webpack://monaco-sql-languages/./node_modules/monaco-editor/esm/vs/basic-languages/dockerfile/dockerfile.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"', close: '\"' },\r\n        { open: \"'\", close: \"'\" }\r\n    ]\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    tokenPostfix: '.dockerfile',\r\n    variable: /\\${?[\\w]+}?/,\r\n    tokenizer: {\r\n        root: [\r\n            { include: '@whitespace' },\r\n            { include: '@comment' },\r\n            [/(ONBUILD)(\\s+)/, ['keyword', '']],\r\n            [/(ENV)(\\s+)([\\w]+)/, ['keyword', '', { token: 'variable', next: '@arguments' }]],\r\n            [\r\n                /(FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|ARG|VOLUME|LABEL|USER|WORKDIR|COPY|CMD|STOPSIGNAL|SHELL|HEALTHCHECK|ENTRYPOINT)/,\r\n                { token: 'keyword', next: '@arguments' }\r\n            ]\r\n        ],\r\n        arguments: [\r\n            { include: '@whitespace' },\r\n            { include: '@strings' },\r\n            [\r\n                /(@variable)/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'variable', next: '@popall' },\r\n                        '@default': 'variable'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /\\\\/,\r\n                {\r\n                    cases: {\r\n                        '@eos': '',\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /./,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        // Deal with white space, including comments\r\n        whitespace: [\r\n            [\r\n                /\\s+/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: '', next: '@popall' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        comment: [[/(^#.*$)/, 'comment', '@popall']],\r\n        // Recognize strings, including those broken across lines with \\ (but not without)\r\n        strings: [\r\n            [/\\\\'$/, '', '@popall'],\r\n            [/\\\\'/, ''],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@stringBody'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@dblStringBody']\r\n        ],\r\n        stringBody: [\r\n            [\r\n                /[^\\\\\\$']/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/'$/, 'string', '@popall'],\r\n            [/'/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ],\r\n        dblStringBody: [\r\n            [\r\n                /[^\\\\\\$\"]/,\r\n                {\r\n                    cases: {\r\n                        '@eos': { token: 'string', next: '@popall' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/\\\\./, 'string.escape'],\r\n            [/\"$/, 'string', '@popall'],\r\n            [/\"/, 'string', '@pop'],\r\n            [/(@variable)/, 'variable'],\r\n            [/\\\\$/, 'string'],\r\n            [/$/, 'string', '@popall']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","brackets","autoClosingPairs","open","close","surroundingPairs","language","defaultToken","tokenPostfix","variable","tokenizer","root","include","token","next","arguments","cases","whitespace","comment","strings","stringBody","dblStringBody"],"sourceRoot":""}
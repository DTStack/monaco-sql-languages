{"version":3,"file":"5962.29080de5808e4395c8c6.js","mappings":"uKAIO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,KAEjBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,WACjC,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,WACjC,CAAEF,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,OAGjBE,EAAW,CAClBC,aAAc,GACdC,aAAc,MACdP,SAAU,CACN,CAAEQ,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,KAC9C,CAAEK,MAAO,wBAAyBN,KAAM,IAAKC,MAAO,KACpD,CAAEK,MAAO,mBAAoBN,KAAM,IAAKC,MAAO,KAC/C,CAAEK,MAAO,kBAAmBN,KAAM,IAAKC,MAAO,MAElDM,SAAU,CACN,MACA,KACA,MACA,MACA,OACA,KACA,QACA,YACA,OACA,SACA,OACA,SACA,OACA,WACA,WACA,OACA,QACA,SACA,OACA,QACA,QACA,SACA,KACA,SACA,QACA,OACA,QACA,OACA,QACA,MACA,SACA,WACA,QACA,SACA,UACA,SACA,UACA,SACA,KACA,OACA,QACA,QACA,QACA,SACA,QACA,QAEJC,iBAAkB,CACd,IACA,MACA,MACA,OACA,QACA,QACA,OACA,WACA,SACA,WACA,QACA,WACA,MACA,iBACA,SACA,QACA,eACA,QACA,KACA,MACA,UACA,QACA,YACA,YACA,QACA,OACA,cACA,QACA,MACA,MACA,MACA,UACA,QACA,MACA,OACA,QACA,UACA,QACA,WACA,SACA,UACA,OACA,SACA,SACA,SACA,MACA,WACA,YACA,QACA,UACA,UACA,SACA,YACA,UACA,SACA,MACA,WACA,KACA,QACA,MACA,OACA,QAGJC,YAAY,EACZC,UAAW,CACPC,KAAM,CAEF,CAAC,mBAAoB,OAErB,CAAEC,QAAS,YAEX,CAAC,MAAO,WAER,CAAC,aAAc,aACf,CAAC,QAAS,aAEV,CAAC,kFAAmF,OACpF,CAAC,0EAA2E,OAE5E,CACI,gBACA,CACIC,MAAO,CACH,YAAa,CAAEP,MAAO,WACtB,oBAAqB,CAAEA,MAAO,kBAC9B,WAAY,gBAKxB,CAAC,OAAQ,gBACT,CAAC,sBAAuB,gBACxB,CAAC,kBAAmB,gBAEpB,CAAC,cAAe,gBAEhB,CAAC,MAAO,UAEZQ,QAAS,CACL,CAAC,kBAAmB,kBACpB,CAAC,KAAM,aAAc,QACrB,CAAC,IAAK,aAAc,eACpB,CAAC,kBAAmB,kBACpB,CAAC,KAAM,aAAc,QACrB,CAAC,IAAK,aAAc,mBAGxBC,WAAY,CACR,CAAC,UAAW,cACZ,CAAC,MAAO,iBACR,CAAC,IAAK,aAAc,SAGxBC,cAAe,CACX,CAAC,UAAW,cACZ,CAAC,MAAO,iBACR,CAAC,IAAK,aAAc","sources":["webpack://monaco-sql-languages/./node_modules/monaco-editor/esm/vs/basic-languages/sparql/sparql.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var conf = {\n    comments: {\n        lineComment: '#'\n    },\n    brackets: [\n        ['{', '}'],\n        ['[', ']'],\n        ['(', ')']\n    ],\n    autoClosingPairs: [\n        { open: \"'\", close: \"'\", notIn: ['string'] },\n        { open: '\"', close: '\"', notIn: ['string'] },\n        { open: '{', close: '}' },\n        { open: '[', close: ']' },\n        { open: '(', close: ')' }\n    ]\n};\nexport var language = {\n    defaultToken: '',\n    tokenPostfix: '.rq',\n    brackets: [\n        { token: 'delimiter.curly', open: '{', close: '}' },\n        { token: 'delimiter.parenthesis', open: '(', close: ')' },\n        { token: 'delimiter.square', open: '[', close: ']' },\n        { token: 'delimiter.angle', open: '<', close: '>' }\n    ],\n    keywords: [\n        'add',\n        'as',\n        'asc',\n        'ask',\n        'base',\n        'by',\n        'clear',\n        'construct',\n        'copy',\n        'create',\n        'data',\n        'delete',\n        'desc',\n        'describe',\n        'distinct',\n        'drop',\n        'false',\n        'filter',\n        'from',\n        'graph',\n        'group',\n        'having',\n        'in',\n        'insert',\n        'limit',\n        'load',\n        'minus',\n        'move',\n        'named',\n        'not',\n        'offset',\n        'optional',\n        'order',\n        'prefix',\n        'reduced',\n        'select',\n        'service',\n        'silent',\n        'to',\n        'true',\n        'undef',\n        'union',\n        'using',\n        'values',\n        'where',\n        'with'\n    ],\n    builtinFunctions: [\n        'a',\n        'abs',\n        'avg',\n        'bind',\n        'bnode',\n        'bound',\n        'ceil',\n        'coalesce',\n        'concat',\n        'contains',\n        'count',\n        'datatype',\n        'day',\n        'encode_for_uri',\n        'exists',\n        'floor',\n        'group_concat',\n        'hours',\n        'if',\n        'iri',\n        'isblank',\n        'isiri',\n        'isliteral',\n        'isnumeric',\n        'isuri',\n        'lang',\n        'langmatches',\n        'lcase',\n        'max',\n        'md5',\n        'min',\n        'minutes',\n        'month',\n        'now',\n        'rand',\n        'regex',\n        'replace',\n        'round',\n        'sameterm',\n        'sample',\n        'seconds',\n        'sha1',\n        'sha256',\n        'sha384',\n        'sha512',\n        'str',\n        'strafter',\n        'strbefore',\n        'strdt',\n        'strends',\n        'strlang',\n        'strlen',\n        'strstarts',\n        'struuid',\n        'substr',\n        'sum',\n        'timezone',\n        'tz',\n        'ucase',\n        'uri',\n        'uuid',\n        'year'\n    ],\n    // describe tokens\n    ignoreCase: true,\n    tokenizer: {\n        root: [\n            // resource indicators\n            [/<[^\\s\\u00a0>]*>?/, 'tag'],\n            // strings\n            { include: '@strings' },\n            // line comment\n            [/#.*/, 'comment'],\n            // special chars with special meaning\n            [/[{}()\\[\\]]/, '@brackets'],\n            [/[;,.]/, 'delimiter'],\n            // (prefixed) name\n            [/[_\\w\\d]+:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])*/, 'tag'],\n            [/:(\\.(?=[\\w_\\-\\\\%])|[:\\w_-]|\\\\[-\\\\_~.!$&'()*+,;=/?#@%]|%[a-f\\d][a-f\\d])+/, 'tag'],\n            // identifiers, builtinFunctions and keywords\n            [\n                /[$?]?[_\\w\\d]+/,\n                {\n                    cases: {\n                        '@keywords': { token: 'keyword' },\n                        '@builtinFunctions': { token: 'predefined.sql' },\n                        '@default': 'identifier'\n                    }\n                }\n            ],\n            // operators\n            [/\\^\\^/, 'operator.sql'],\n            [/\\^[*+\\-<>=&|^\\/!?]*/, 'operator.sql'],\n            [/[*+\\-<>=&|\\/!?]/, 'operator.sql'],\n            // symbol\n            [/@[a-z\\d\\-]*/, 'metatag.html'],\n            // whitespaces\n            [/\\s+/, 'white']\n        ],\n        strings: [\n            [/'([^'\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/'$/, 'string.sql', '@pop'],\n            [/'/, 'string.sql', '@stringBody'],\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\n            [/\"$/, 'string.sql', '@pop'],\n            [/\"/, 'string.sql', '@dblStringBody']\n        ],\n        // single-quoted strings\n        stringBody: [\n            [/[^\\\\']+/, 'string.sql'],\n            [/\\\\./, 'string.escape'],\n            [/'/, 'string.sql', '@pop']\n        ],\n        // double-quoted strings\n        dblStringBody: [\n            [/[^\\\\\"]+/, 'string.sql'],\n            [/\\\\./, 'string.escape'],\n            [/\"/, 'string.sql', '@pop']\n        ]\n    }\n};\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","language","defaultToken","tokenPostfix","token","keywords","builtinFunctions","ignoreCase","tokenizer","root","include","cases","strings","stringBody","dblStringBody"],"sourceRoot":""}
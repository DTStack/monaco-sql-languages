{"version":3,"file":"6489.3fc7ee4f2f830d9b7686.js","mappings":"uKAIO,IAAIA,EAAO,CACdC,SAAU,CACNC,YAAa,KAEjBC,SAAU,CACN,CAAC,IAAK,KACN,CAAC,IAAK,KACN,CAAC,IAAK,MAEVC,iBAAkB,CACd,CAAEC,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,MAAOC,MAAO,MAAOC,MAAO,CAAC,SAAU,YAC/C,CAAEF,KAAM,IAAKC,MAAO,IAAKC,MAAO,CAAC,SAAU,aAE/CC,iBAAkB,CACd,CAAEH,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,IAAKC,MAAO,KACpB,CAAED,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,IAAKC,MAAO,MAExBG,QAAS,CACLC,SAAS,IAGNC,EAAW,CAElBC,aAAc,UACdC,aAAc,OACdC,SAAU,CACN,OACA,OACA,QACA,QACA,WACA,eACA,SACA,SACA,YACA,SACA,OACA,YACA,QACA,OACA,QACA,aACA,WACA,MAEJC,aAAc,CAAC,MAAO,QAAS,SAAU,UAAW,MACpDC,mBAAoB,CAChB,SACA,SACA,SACA,mBACA,sBACA,YACA,QACA,OACA,aACA,eACA,yBACA,QACA,WACA,eACA,QACA,sBACA,kBACA,kBACA,uBAEJC,UAAW,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,KAErCC,QAAS,YAETC,QAAS,qCAETC,UAAW,CACPC,KAAM,CAEF,CACI,eACA,CACIC,MAAO,CACH,YAAa,UACb,WAAY,oBAKxB,CACI,YACA,CACIA,MAAO,CACH,YAAa,UACb,WAAY,yBAKxB,CACI,eACA,CACIA,MAAO,CACH,gBAAiB,UACjB,WAAY,qBAKxB,CAAEC,QAAS,eAEX,CAAC,aAAc,aACf,CAAC,WAAY,CAAED,MAAO,CAAE,aAAc,WAAY,WAAY,MAI9D,CAAC,yBAA0B,CAAEE,MAAO,aAAcC,IAAK,yBAEvD,CAAC,2BAA4B,gBAC7B,CAAC,oBAAqB,cACtB,CAAC,MAAO,UAER,CAAC,QAAS,aACV,CAAC,MAAO,CAAED,MAAO,SAAUE,KAAM,YAAaC,aAAc,aAE5D,CAAC,kBAAmB,kBACpB,CAAC,IAAK,CAAEH,MAAO,eAAgBI,QAAS,QAASF,KAAM,aAE3DG,SAAU,CACN,CAAC,QAAS,UACV,CAAC,MAAO,CAAEL,MAAO,SAAUE,KAAM,OAAQC,aAAc,UAE3DG,OAAQ,CACJ,CAAC,UAAW,UACZ,CAAC,WAAY,iBACb,CAAC,MAAO,yBACR,CAAC,IAAK,CAAEN,MAAO,eAAgBI,QAAS,SAAUF,KAAM,UAE5DK,WAAY,CACR,CAAC,aAAc,IACf,CAAC,OAAQ","sources":["webpack://monaco-sql-languages/./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    comments: {\r\n        lineComment: '#'\r\n    },\r\n    brackets: [\r\n        ['{', '}'],\r\n        ['[', ']'],\r\n        ['(', ')']\r\n    ],\r\n    autoClosingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"\"\"', close: '\"\"\"', notIn: ['string', 'comment'] },\r\n        { open: '\"', close: '\"', notIn: ['string', 'comment'] }\r\n    ],\r\n    surroundingPairs: [\r\n        { open: '{', close: '}' },\r\n        { open: '[', close: ']' },\r\n        { open: '(', close: ')' },\r\n        { open: '\"\"\"', close: '\"\"\"' },\r\n        { open: '\"', close: '\"' }\r\n    ],\r\n    folding: {\r\n        offSide: true\r\n    }\r\n};\r\nexport var language = {\r\n    // Set defaultToken to invalid to see what you do not tokenize yet\r\n    defaultToken: 'invalid',\r\n    tokenPostfix: '.gql',\r\n    keywords: [\r\n        'null',\r\n        'true',\r\n        'false',\r\n        'query',\r\n        'mutation',\r\n        'subscription',\r\n        'extend',\r\n        'schema',\r\n        'directive',\r\n        'scalar',\r\n        'type',\r\n        'interface',\r\n        'union',\r\n        'enum',\r\n        'input',\r\n        'implements',\r\n        'fragment',\r\n        'on'\r\n    ],\r\n    typeKeywords: ['Int', 'Float', 'String', 'Boolean', 'ID'],\r\n    directiveLocations: [\r\n        'SCHEMA',\r\n        'SCALAR',\r\n        'OBJECT',\r\n        'FIELD_DEFINITION',\r\n        'ARGUMENT_DEFINITION',\r\n        'INTERFACE',\r\n        'UNION',\r\n        'ENUM',\r\n        'ENUM_VALUE',\r\n        'INPUT_OBJECT',\r\n        'INPUT_FIELD_DEFINITION',\r\n        'QUERY',\r\n        'MUTATION',\r\n        'SUBSCRIPTION',\r\n        'FIELD',\r\n        'FRAGMENT_DEFINITION',\r\n        'FRAGMENT_SPREAD',\r\n        'INLINE_FRAGMENT',\r\n        'VARIABLE_DEFINITION'\r\n    ],\r\n    operators: ['=', '!', '?', ':', '&', '|'],\r\n    // we include these common regular expressions\r\n    symbols: /[=!?:&|]+/,\r\n    // https://facebook.github.io/graphql/draft/#sec-String-Value\r\n    escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // fields and argument names\r\n            [\r\n                /[a-z_][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'key.identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // identify typed input variables\r\n            [\r\n                /[$][\\w$]*/,\r\n                {\r\n                    cases: {\r\n                        '@keywords': 'keyword',\r\n                        '@default': 'argument.identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // to show class names nicely\r\n            [\r\n                /[A-Z][\\w\\$]*/,\r\n                {\r\n                    cases: {\r\n                        '@typeKeywords': 'keyword',\r\n                        '@default': 'type.identifier'\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            { include: '@whitespace' },\r\n            // delimiters and operators\r\n            [/[{}()\\[\\]]/, '@brackets'],\r\n            [/@symbols/, { cases: { '@operators': 'operator', '@default': '' } }],\r\n            // @ annotations.\r\n            // As an example, we emit a debugging log message on these tokens.\r\n            // Note: message are supressed during the first load -- change some lines to see them.\r\n            [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, { token: 'annotation', log: 'annotation token: $0' }],\r\n            // numbers\r\n            [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[;,.]/, 'delimiter'],\r\n            [/\"\"\"/, { token: 'string', next: '@mlstring', nextEmbedded: 'markdown' }],\r\n            // strings\r\n            [/\"([^\"\\\\]|\\\\.)*$/, 'string.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@open', next: '@string' }]\r\n        ],\r\n        mlstring: [\r\n            [/[^\"]+/, 'string'],\r\n            ['\"\"\"', { token: 'string', next: '@pop', nextEmbedded: '@pop' }]\r\n        ],\r\n        string: [\r\n            [/[^\\\\\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\\\./, 'string.escape.invalid'],\r\n            [/\"/, { token: 'string.quote', bracket: '@close', next: '@pop' }]\r\n        ],\r\n        whitespace: [\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            [/#.*$/, 'comment']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","comments","lineComment","brackets","autoClosingPairs","open","close","notIn","surroundingPairs","folding","offSide","language","defaultToken","tokenPostfix","keywords","typeKeywords","directiveLocations","operators","symbols","escapes","tokenizer","root","cases","include","token","log","next","nextEmbedded","bracket","mlstring","string","whitespace"],"sourceRoot":""}
{"version":3,"file":"854.6048b762e45ae7444d4c.js","mappings":"sKAIO,IAAIA,EAAO,CACdC,YAAa,wFACbC,SAAU,CACNC,aAAc,CAAC,MAAO,OACtBC,YAAa,KAEjBC,QAAS,CACLC,QAAS,CACLC,MAAO,IAAIC,OAAO,mBAClBC,IAAK,IAAID,OAAO,yBAIjBE,EAAW,CAClBC,aAAc,GACdC,YAAY,EACZC,aAAc,QACdC,MAAO,qCACPC,SAAU,CACN,QACA,QACA,UACA,OACA,MACA,OACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,KACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,OACA,OACA,QACA,MACA,OACA,OACA,MACA,IACA,MACA,OACA,KACA,KACA,MACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,OACA,OACA,OACA,QAGJC,QAAS,WACTC,QAAS,yEAETC,UAAW,CACPC,KAAM,CAEF,CAAC,iBAAkB,uBACnB,CACI,gBACA,CACIC,MAAO,CACHC,KAAM,sBACN,YAAa,CAAEC,MAAO,cACtB,WAAY,MAKxB,CAAC,aAAc,IAEf,CAAC,OAAQ,WAET,CAAC,MAAO,CAAEA,MAAO,SAAUC,KAAM,gBACjC,CAAC,iBAAkB,CAAC,GAAI,WACxB,CAAC,oBAAqB,CAAC,YAAa,GAAI,WACxC,CAAC,oBAAqB,CAAC,YAAa,GAAI,WAExC,CAAC,WAAY,aAEb,CAAC,sBAAuB,gBACxB,CAAC,2BAA4B,gBAC7B,CAAC,oBAAqB,cACtB,CAAC,gBAAiB,gBAClB,CAAC,MAAO,UAER,CAAC,OAAQ,aAET,CAAC,MAAO,SAAU,mBAClB,CAAC,MAAO,SAAU,mBAClB,CACI,IACA,CACIH,MAAO,CACH,OAAQ,SACR,WAAY,CAAEE,MAAO,SAAUC,KAAM,gBAIjD,CACI,IACA,CACIH,MAAO,CACH,OAAQ,SACR,WAAY,CAAEE,MAAO,SAAUC,KAAM,iBAKrDC,OAAQ,CACJ,CAAC,aAAc,UACf,CAAC,WAAY,iBACb,CAAC,KAAM,yBACP,CAAC,KAAM,yBACP,CACI,KACA,CACIJ,MAAO,CACH,SAAU,CACNE,MAAO,SACPC,KAAM,2BAEV,WAAY,YAIxB,CACI,OACA,CACIH,MAAO,CACH,UAAW,CAAEE,MAAO,SAAUC,KAAM,QACpC,WAAY,YAIxB,CAAC,IAAK,WAEVE,WAAY,CACR,CACI,YACA,CACIL,MAAO,CACH,UAAW,CAAEE,MAAO,SAAUC,KAAM,QACpC,WAAY,YAIxB,CAAC,YAAa,UACd,CAAC,QAAS,UACV,CAAC,WAAY,iBACb,CAAC,KAAM,yBACP,CAAC,KAAM,CAAED,MAAO,eAAgBC,KAAM,4BACtC,CAAC,IAAK,WAEVG,QAAS,CACL,CAAC,QAAS,WACV,CAAC,IAAK,YAEVC,WAAY,CACR,CAAC,YAAa,UACd,CAAC,MAAO,UACR,CAAC,OAAQ,WACT,CAAC,YAAa,CAAEL,MAAO,SAAUC,KAAM,SACvC,CAAC,KAAM","sources":["webpack://monaco-sql-languages/./node_modules/monaco-editor/esm/vs/basic-languages/mips/mips.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var conf = {\r\n    wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#%\\^\\&\\*\\(\\)\\=\\$\\-\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n    comments: {\r\n        blockComment: ['###', '###'],\r\n        lineComment: '#'\r\n    },\r\n    folding: {\r\n        markers: {\r\n            start: new RegExp('^\\\\s*#region\\\\b'),\r\n            end: new RegExp('^\\\\s*#endregion\\\\b')\r\n        }\r\n    }\r\n};\r\nexport var language = {\r\n    defaultToken: '',\r\n    ignoreCase: false,\r\n    tokenPostfix: '.mips',\r\n    regEx: /\\/(?!\\/\\/)(?:[^\\/\\\\]|\\\\.)*\\/[igm]*/,\r\n    keywords: [\r\n        '.data',\r\n        '.text',\r\n        'syscall',\r\n        'trap',\r\n        'add',\r\n        'addu',\r\n        'addi',\r\n        'addiu',\r\n        'and',\r\n        'andi',\r\n        'div',\r\n        'divu',\r\n        'mult',\r\n        'multu',\r\n        'nor',\r\n        'or',\r\n        'ori',\r\n        'sll',\r\n        'slv',\r\n        'sra',\r\n        'srav',\r\n        'srl',\r\n        'srlv',\r\n        'sub',\r\n        'subu',\r\n        'xor',\r\n        'xori',\r\n        'lhi',\r\n        'lho',\r\n        'lhi',\r\n        'llo',\r\n        'slt',\r\n        'slti',\r\n        'sltu',\r\n        'sltiu',\r\n        'beq',\r\n        'bgtz',\r\n        'blez',\r\n        'bne',\r\n        'j',\r\n        'jal',\r\n        'jalr',\r\n        'jr',\r\n        'lb',\r\n        'lbu',\r\n        'lh',\r\n        'lhu',\r\n        'lw',\r\n        'li',\r\n        'la',\r\n        'sb',\r\n        'sh',\r\n        'sw',\r\n        'mfhi',\r\n        'mflo',\r\n        'mthi',\r\n        'mtlo',\r\n        'move'\r\n    ],\r\n    // we include these common regular expressions\r\n    symbols: /[\\.,\\:]+/,\r\n    escapes: /\\\\(?:[abfnrtv\\\\\"'$]|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n    // The main tokenizer for our languages\r\n    tokenizer: {\r\n        root: [\r\n            // identifiers and keywords\r\n            [/\\$[a-zA-Z_]\\w*/, 'variable.predefined'],\r\n            [\r\n                /[.a-zA-Z_]\\w*/,\r\n                {\r\n                    cases: {\r\n                        this: 'variable.predefined',\r\n                        '@keywords': { token: 'keyword.$0' },\r\n                        '@default': ''\r\n                    }\r\n                }\r\n            ],\r\n            // whitespace\r\n            [/[ \\t\\r\\n]+/, ''],\r\n            // Comments\r\n            [/#.*$/, 'comment'],\r\n            // regular expressions\r\n            ['///', { token: 'regexp', next: '@hereregexp' }],\r\n            [/^(\\s*)(@regEx)/, ['', 'regexp']],\r\n            [/(\\,)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            [/(\\:)(\\s*)(@regEx)/, ['delimiter', '', 'regexp']],\r\n            // delimiters\r\n            [/@symbols/, 'delimiter'],\r\n            // numbers\r\n            [/\\d+[eE]([\\-+]?\\d+)?/, 'number.float'],\r\n            [/\\d+\\.\\d+([eE][\\-+]?\\d+)?/, 'number.float'],\r\n            [/0[xX][0-9a-fA-F]+/, 'number.hex'],\r\n            [/0[0-7]+(?!\\d)/, 'number.octal'],\r\n            [/\\d+/, 'number'],\r\n            // delimiter: after number because of .\\d floats\r\n            [/[,.]/, 'delimiter'],\r\n            // strings:\r\n            [/\"\"\"/, 'string', '@herestring.\"\"\"'],\r\n            [/'''/, 'string', \"@herestring.'''\"],\r\n            [\r\n                /\"/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: '@string.\"' }\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /'/,\r\n                {\r\n                    cases: {\r\n                        '@eos': 'string',\r\n                        '@default': { token: 'string', next: \"@string.'\" }\r\n                    }\r\n                }\r\n            ]\r\n        ],\r\n        string: [\r\n            [/[^\"'\\#\\\\]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [\r\n                /#{/,\r\n                {\r\n                    cases: {\r\n                        '$S2==\"': {\r\n                            token: 'string',\r\n                            next: 'root.interpolatedstring'\r\n                        },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [\r\n                /[\"']/,\r\n                {\r\n                    cases: {\r\n                        '$#==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/#/, 'string']\r\n        ],\r\n        herestring: [\r\n            [\r\n                /(\"\"\"|''')/,\r\n                {\r\n                    cases: {\r\n                        '$1==$S2': { token: 'string', next: '@pop' },\r\n                        '@default': 'string'\r\n                    }\r\n                }\r\n            ],\r\n            [/[^#\\\\'\"]+/, 'string'],\r\n            [/['\"]+/, 'string'],\r\n            [/@escapes/, 'string.escape'],\r\n            [/\\./, 'string.escape.invalid'],\r\n            [/#{/, { token: 'string.quote', next: 'root.interpolatedstring' }],\r\n            [/#/, 'string']\r\n        ],\r\n        comment: [\r\n            [/[^#]+/, 'comment'],\r\n            [/#/, 'comment']\r\n        ],\r\n        hereregexp: [\r\n            [/[^\\\\\\/#]+/, 'regexp'],\r\n            [/\\\\./, 'regexp'],\r\n            [/#.*$/, 'comment'],\r\n            ['///[igm]*', { token: 'regexp', next: '@pop' }],\r\n            [/\\//, 'regexp']\r\n        ]\r\n    }\r\n};\r\n"],"names":["conf","wordPattern","comments","blockComment","lineComment","folding","markers","start","RegExp","end","language","defaultToken","ignoreCase","tokenPostfix","regEx","keywords","symbols","escapes","tokenizer","root","cases","this","token","next","string","herestring","comment","hereregexp"],"sourceRoot":""}